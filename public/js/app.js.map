{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/lines.js","js/controllers/twitter.js","js/models/user.js","js/controllers/users.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","provider","res","console","log","LinesIndexController","$http","getTflStatus","get","lines","all","catch","err","TwitterController","getTweets","tweets","data","statuses","User","$resource","id","update","method","UsersIndexController","usersIndex","query","angular","module","config","$inject","factory"],"mappings":"YAQA,SAASA,QAAOC,EAAgBC,GAC9BD,EACCE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,iCAEbH,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAGdJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GCjC9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACjBL,KAAK,WACJL,EAAOM,GAAG,gBAId,QAASK,GAAcC,GACrBb,EAAMY,aAAaC,GAChBP,KAAK,SAACQ,GACLC,QAAQC,IAAIF,KAdlB,GAAMJ,GAAQF,IAEdE,GAAMC,eAgBND,EAAMR,OAASA,EACfQ,EAAME,aAAeA,ECrCvB,QAASK,sBAAqBC,GAI5B,QAASC,KACPD,EACGE,IAAI,WACJd,KAAK,SAACQ,GACLC,QAAQC,IAAIF,GACZO,EAAMC,IAAMR,IAEbS,MAAM,SAACC,GACNT,QAAQC,IAAIQ,KAXlB,GAAMH,GAAQb,IACda,GAAMC,OAcNH,IChBF,QAASM,mBAAkBP,GAIzB,QAASQ,KACPR,EAAME,IAAI,WACPd,KAAK,SAACQ,EAAKU,GACV,MAAGA,OACDT,SAAQC,IAAI,uCAAwCQ,IAGtDG,EAAOL,IAAMR,EAAIc,KAAKC,aACtBd,SAAQC,IAAIW,EAAOL,QAXzB,GAAMK,GAASnB,IACfmB,GAAOL,OAcPI,ICjBF,QAASI,MAAKC,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCC,QAAUC,OAAQ,SCDtB,QAASC,sBAAqBL,GAC5B,GAAMM,GAAa5B,IAEnB4B,GAAWd,IAAMQ,EAAKO,QLRxBC,QACGC,OAAO,oBAAqB,aAAc,YAAa,eACvDC,OAAOtD,QACPsD,OAAO9C,MAIVR,OAAOuD,SAAW,iBAAkB,sBA2BpC/C,KAAK+C,SAAW,iBClChBH,QAAQC,OAAO,oBACZ/C,WAAW,qBAAsBO,oBACjCP,WAAW,kBAAmBiB,iBAGjCV,mBAAmB0C,SAAW,QAAS,UAgBvChC,gBAAgBgC,SAAW,QAAS,UCrBpCH,QACGC,OAAO,oBACP/C,WAAW,uBAAwByB,sBAEtCA,qBAAqBwB,SAAW,SCJhCH,QAAQC,OAAO,oBACZ/C,WAAW,oBAAqBiC,mBAGnCA,kBAAkBgB,SAAW,SCJ7BH,QAAQC,OAAO,oBACZG,QAAQ,OAAQZ,MAEnBA,KAAKW,SAAW,aCHhBH,QACGC,OAAO,oBACP/C,WAAW,uBAAwB2C,sBAEtCA,qBAAqBM,SAAW","file":"app.js","sourcesContent":["angular\n  .module('twitterForLondon', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\n\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('usersIndex', {\n    url: '/users',\n    templateUrl: '/templates/usersIndex.html',\n    controller: 'UsersIndexController as user'\n  })\n  .state('linesIndex', {\n    url: '/lines',\n    templateUrl: '/templates/linesIndex.html',\n    controller: 'LinesIndexController as linesIndex'\n  })\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n}\n","angular.module('twitterForLondon')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('linesIndex');\n    });\n  }\n\n  function authenticate (provider) {\n    $auth.authenticate(provider)\n      .then((res) => {\n        console.log(res);\n      });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular\n  .module('twitterForLondon')\n  .controller('LinesIndexController', LinesIndexController);\n\nLinesIndexController.$inject = ['$http'];\nfunction LinesIndexController($http) {\n  const lines = this;\n  lines.all = [];\n\n  function getTflStatus() {\n    $http\n      .get('/status')\n      .then((res) => {\n        console.log(res);\n        lines.all = res;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  getTflStatus();\n}\n","angular.module('twitterForLondon')\n  .controller('TwitterController', TwitterController);\n\n\nTwitterController.$inject = ['$http'];\nfunction TwitterController($http) {\n  const tweets = this;\n  tweets.all = [];\n\n  function getTweets() {\n    $http.get('/tweets')\n      .then((res, err) => {\n        if(err) {\n          console.log('Something went wrong, run away from ', err );\n          return;\n        }\n        tweets.all = res.data.statuses;\n        console.log(tweets.all);\n      });\n  }\n\n  getTweets();\n}\n","angular.module('twitterForLondon')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular\n  .module('twitterForLondon')\n  .controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User){\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n"]}