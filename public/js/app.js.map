{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/lines.js","js/services/tfl.js","js/models/user.js","js/controllers/users.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","twitter","consumer_key","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","provider","LinesIndexController","TFL","linesIndex","all","getStatuses","lines","LinesShowController","$http","getTweets","method","params","q","tflId","res","err","console","log","linesShow","tweets","data","statuses","line","filter","get","User","$resource","id","update","UsersIndexController","usersIndex","query","angular","module","config","$inject","service","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('twitterForLondon', ['ngResource', 'ui.router', 'satellizer', 'ngSanitize'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider,   $urlRouterProvider) {\n  $stateProvider\n  .state('usersIndex', {\n    url: '/users',\n    templateUrl: '/templates/usersIndex.html',\n    controller: 'UsersIndexController as user'\n  })\n  .state('linesIndex', {\n    url: '/lines',\n    templateUrl: '/templates/linesIndex.html',\n    controller: 'LinesIndexController as linesIndex'\n  })\n  .state('linesShow', {\n    url: '/lines/:tflId',\n    templateUrl: '/templates/linesShow.html',\n    controller: 'LinesShowController as linesShow'\n  })\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  });\n\n  $urlRouterProvider.otherwise('/lines');\n}\n\nAuth.$inject = ['$authProvider'];\n\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '360279380977935'\n  });\n\n  $authProvider.twitter({\n    consumer_key: 'rG5fJ6jrp0NECDqpceKMo5UuZ'\n  });\n  //\n  // $authProvider.instagram({\n  //   clientId: 'Instagram Client ID'\n  // });\n\n}\n","angular.module('twitterForLondon')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('linesIndex');\n    });\n  }\n\n  function authenticate (provider) {\n    $auth.authenticate(provider)\n      .then(() => {\n        $state.go('linesIndex');\n      });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular\n  .module('twitterForLondon')\n  .controller('LinesIndexController', LinesIndexController)\n  .controller('LinesShowController', LinesShowController);\n\n\nLinesIndexController.$inject = ['TFL'];\nfunction LinesIndexController(TFL) {\n  const linesIndex = this;\n  linesIndex.all = [];\n\n  TFL.getStatuses()\n    .then((lines) => {\n      linesIndex.all = lines;\n    });\n}\n\nLinesShowController.$inject = ['TFL', '$http', '$state'];\nfunction LinesShowController(TFL, $http, $state) {\n  const linesShow = this;\n  linesShow.tweets = [];\n\n  TFL.getStatuses()\n    .then((lines) => {\n      linesShow.line = lines.filter((line) => {\n        return line.tflId === $state.params.tflId;\n      })[0];\n    });\n\n  function getTweets() {\n    $http({\n      method: 'GET',\n      url: '/tweets',\n      params: { q: $state.params.tflId }\n    }).then((res, err) => {\n      if(err) {\n        console.log('Something went wrong, run away from ', err );\n        return;\n      }\n      linesShow.tweets = res.data.statuses;\n      console.log(linesShow.tweets);\n    });\n  }\n\n  getTweets();\n}\n","angular\n  .module('twitterForLondon')\n  .service('TFL', TFL);\n\nTFL.$inject = ['$http'];\nfunction TFL($http) {\n  function getStatuses() {\n    return $http\n      .get('/status')\n      .then((res) => {\n        return res.data;\n      });\n  }\n\n  this.getStatuses = getStatuses;\n}\n","angular.module('twitterForLondon')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular\n  .module('twitterForLondon')\n  .controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User){\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n"]}