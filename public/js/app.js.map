{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/lines.js","js/services/tfl.js","js/models/user.js","js/controllers/users.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","LoginController","$auth","$state","submit","login","credentials","then","go","authenticate","provider","res","console","log","this","LinesIndexController","TFL","linesIndex","all","getStatuses","lines","LinesShowController","$http","getTweets","method","params","q","tflId","err","linesShow","tweets","data","statuses","line","filter","get","User","$resource","id","update","UsersIndexController","usersIndex","query","angular","module","config","$inject","service","factory"],"mappings":"YAQA,SAASA,QAAOC,EAAgBC,GAC9BD,EACCE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,iCAEbH,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,aACLC,IAAK,gBACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAGdJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GCnC9B,QAASC,iBAAgBC,EAAOC,GAK9B,QAASC,KACPF,EAAMG,MAAMA,EAAMC,aACjBC,KAAK,WACJJ,EAAOK,GAAG,kBAId,QAASC,GAAcC,GACrBR,EAAMO,aAAaC,GAChBH,KAAK,SAACI,GACLC,QAAQC,IAAIF,KAdlB,GAAMN,GAAQS,IAEdT,GAAMC,eAgBND,EAAMD,OAASA,EACfC,EAAMI,aAAeA,ECjBvB,QAASM,sBAAqBC,GAC5B,GAAMC,GAAaH,IACnBG,GAAWC,OAEXF,EAAIG,cACDZ,KAAK,SAACa,GACLH,EAAWC,IAAME,IAKvB,QAASC,qBAAoBL,EAAKM,EAAOnB,GAWvC,QAASoB,KACPD,GACEE,OAAQ,MACRhC,IAAK,UACLiC,QAAUC,EAAGvB,EAAOsB,OAAOE,SAC1BpB,KAAK,SAACI,EAAKiB,GACZ,MAAGA,OACDhB,SAAQC,IAAI,uCAAwCe,IAGtDC,EAAUC,OAASnB,EAAIoB,KAAKC,aAC5BpB,SAAQC,IAAIgB,EAAUC,WArB1B,GAAMD,GAAYf,IAClBe,GAAUC,UAEVd,EAAIG,cACDZ,KAAK,SAACa,GACLS,EAAUI,KAAOb,EAAMc,OAAO,SAACD,GAC7B,MAAOA,GAAKN,QAAUxB,EAAOsB,OAAOE,QACnC,KAkBPJ,ICvCF,QAASP,KAAIM,GACX,QAASH,KACP,MAAOG,GACJa,IAAI,WACJ5B,KAAK,SAACI,GACL,MAAOA,GAAIoB,OAIjBjB,KAAKK,YAAcA,ECVrB,QAASiB,MAAKC,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCC,QAAUf,OAAQ,SCDtB,QAASgB,sBAAqBJ,GAC5B,GAAMK,GAAa3B,IAEnB2B,GAAWvB,IAAMkB,EAAKM,QLRxBC,QACGC,OAAO,oBAAqB,aAAc,YAAa,aAAc,eACrEC,OAAOzD,QACPyD,OAAOjD,MAIVR,OAAO0D,SAAW,iBAAkB,sBA2BpClD,KAAKkD,SAAW,iBClChBH,QAAQC,OAAO,oBACZlD,WAAW,kBAAmBO,iBAEjCA,gBAAgB6C,SAAW,QAAS,UCHpCH,QACGC,OAAO,oBACPlD,WAAW,uBAAwBqB,sBACnCrB,WAAW,sBAAuB2B,qBAGrCN,qBAAqB+B,SAAW,OAWhCzB,oBAAoByB,SAAW,MAAO,QAAS,UCjB/CH,QACGC,OAAO,oBACPG,QAAQ,MAAO/B,KAElBA,IAAI8B,SAAW,SCJfH,QAAQC,OAAO,oBACZI,QAAQ,OAAQZ,MAEnBA,KAAKU,SAAW,aCHhBH,QACGC,OAAO,oBACPlD,WAAW,uBAAwB8C,sBAEtCA,qBAAqBM,SAAW","file":"app.js","sourcesContent":["angular\n  .module('twitterForLondon', ['ngResource', 'ui.router', 'satellizer', 'ngSanitize'])\n  .config(Router)\n  .config(Auth);\n\n\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('usersIndex', {\n    url: '/users',\n    templateUrl: '/templates/usersIndex.html',\n    controller: 'UsersIndexController as user'\n  })\n  .state('linesIndex', {\n    url: '/lines',\n    templateUrl: '/templates/linesIndex.html',\n    controller: 'LinesIndexController as linesIndex'\n  })\n  .state('linesShow', {\n    url: '/lines/:tflId',\n    templateUrl: '/templates/linesShow.html',\n    controller: 'LinesShowController as linesShow'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n}\n","angular.module('twitterForLondon')\n  .controller('LoginController', LoginController);\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('profileIndex');\n    });\n  }\n\n  function authenticate (provider) {\n    $auth.authenticate(provider)\n      .then((res) => {\n        console.log(res);\n      });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular\n  .module('twitterForLondon')\n  .controller('LinesIndexController', LinesIndexController)\n  .controller('LinesShowController', LinesShowController);\n\n\nLinesIndexController.$inject = ['TFL'];\nfunction LinesIndexController(TFL) {\n  const linesIndex = this;\n  linesIndex.all = [];\n\n  TFL.getStatuses()\n    .then((lines) => {\n      linesIndex.all = lines;\n    });\n}\n\nLinesShowController.$inject = ['TFL', '$http', '$state'];\nfunction LinesShowController(TFL, $http, $state) {\n  const linesShow = this;\n  linesShow.tweets = [];\n\n  TFL.getStatuses()\n    .then((lines) => {\n      linesShow.line = lines.filter((line) => {\n        return line.tflId === $state.params.tflId;\n      })[0];\n    });\n\n  function getTweets() {\n    $http({\n      method: 'GET',\n      url: '/tweets',\n      params: { q: $state.params.tflId }\n    }).then((res, err) => {\n      if(err) {\n        console.log('Something went wrong, run away from ', err );\n        return;\n      }\n      linesShow.tweets = res.data.statuses;\n      console.log(linesShow.tweets);\n    });\n  }\n\n  getTweets();\n}\n","angular\n  .module('twitterForLondon')\n  .service('TFL', TFL);\n\nTFL.$inject = ['$http'];\nfunction TFL($http) {\n  function getStatuses() {\n    return $http\n      .get('/status')\n      .then((res) => {\n        return res.data;\n      });\n  }\n\n  this.getStatuses = getStatuses;\n}\n","angular.module('twitterForLondon')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular\n  .module('twitterForLondon')\n  .controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User){\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n"]}