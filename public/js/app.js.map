{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/lines.js","js/controllers/twitter.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","LoginController","$auth","$state","submit","login","credentials","then","go","authenticate","provider","res","console","log","this","LinesController","$http","getTflStatus","get","catch","err","TwitterController","getTweets","tweets","all","data","statuses","angular","module","config","$inject"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAGhBJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GClB9B,QAASC,iBAAgBC,EAAOC,GAK9B,QAASC,KACPF,EAAMG,MAAMA,EAAMC,aACjBC,KAAK,WACJJ,EAAOK,GAAG,kBAId,QAASC,GAAcC,GACrBR,EAAMO,aAAaC,GAChBH,KAAK,SAACI,GACLC,QAAQC,IAAIF,KAdlB,GAAMN,GAAQS,IAEdT,GAAMC,eAgBND,EAAMD,OAASA,EACfC,EAAMI,aAAeA,ECnBvB,QAASM,iBAAgBC,GAEvB,QAASC,KACPD,EACGE,IAAI,WACJX,KAAK,SAACI,GACLC,QAAQC,IAAIF,KAEbQ,MAAM,SAACC,GACNR,QAAQC,IAAIO,KAIlBH,ICbF,QAASI,mBAAkBL,GAIzB,QAASM,KACPN,EAAME,IAAI,WACPX,KAAK,SAACI,EAAKS,GACV,MAAGA,OACDR,SAAQC,IAAI,uCAAwCO,IAGtDG,EAAOC,IAAMb,EAAIc,KAAKC,aACtBd,SAAQC,IAAIU,EAAOC,QAXzB,GAAMD,GAAST,IACfS,GAAOC,OAcPF,IHrBFK,QACGC,OAAO,oBAAqB,aAAc,YAAa,eACvDC,OAAOzC,QACPyC,OAAOjC,MAEVR,OAAO0C,SAAW,iBAAkB,sBAYpClC,KAAKkC,SAAW,iBCjBhBH,QAAQC,OAAO,oBACZlC,WAAW,kBAAmBO,iBAEjCA,gBAAgB6B,SAAW,QAAS,UCHpCH,QACGC,OAAO,oBACPlC,WAAW,kBAAmBqB,iBAEjCA,gBAAgBe,SAAW,SCJ3BH,QAAQC,OAAO,oBACZlC,WAAW,oBAAqB2B,mBAGnCA,kBAAkBS,SAAW","file":"app.js","sourcesContent":["angular\n  .module('twitterForLondon', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n}\n","angular.module('twitterForLondon')\n  .controller('LoginController', LoginController);\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('profileIndex');\n    });\n  }\n\n  function authenticate (provider) {\n    $auth.authenticate(provider)\n      .then((res) => {\n        console.log(res);\n      });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular\n  .module('twitterForLondon')\n  .controller('LinesController', LinesController);\n\nLinesController.$inject = ['$http'];\nfunction LinesController($http) {\n\n  function getTflStatus() {\n    $http\n      .get('/status')\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  getTflStatus();\n}\n","angular.module('twitterForLondon')\n  .controller('TwitterController', TwitterController);\n\n\nTwitterController.$inject = ['$http'];\nfunction TwitterController($http) {\n  const tweets = this;\n  tweets.all = [];\n\n  function getTweets() {\n    $http.get('/tweets')\n      .then((res, err) => {\n        if(err) {\n          console.log('Something went wrong, run away from ', err );\n          return;\n        }\n        tweets.all = res.data.statuses;\n        console.log(tweets.all);\n      });\n  }\n\n  getTweets();\n}\n"]}