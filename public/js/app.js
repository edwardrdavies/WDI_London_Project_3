"use strict";function Router(e,t){e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as user"}).state("linesIndex",{url:"/lines",templateUrl:"/templates/linesIndex.html",controller:"LinesIndexController as linesIndex"}).state("linesFavIndex",{url:"/linesFav",templateUrl:"/templates/linesFavIndex.html",controller:"LinesFavIndexController as linesFavIndex"}).state("linesShow",{url:"/lines/:tflId",templateUrl:"/templates/linesShow.html",controller:"LinesShowController as linesShow"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersEdit",{url:"/user/:id",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as edit"}).state("confirm",{url:"/confirm/:confirmationCode",templateUrl:"/templates/confirm.html",controller:"ConfirmController as confirm"}),t.otherwise("/lines")}function Auth(e){e.loginUrl="/login",e.signupUrl="/register",e.tokenPrefix="",e.facebook({clientId:"360279380977935"}),e.twitter({consumer_key:"rG5fJ6jrp0NECDqpceKMo5UuZ"})}function RegisterController(e,t){function n(){e.signup(r.user).then(function(){t.go("login")})}var r=this;r.user={},r.submit=n}function ConfirmationController(e,t){e({method:"POST",url:"/confirm/"+t.params.confirmationCode}).then(function(){t.go("login")})}function LoginController(e,t){function n(){e.login(o.credentials).then(function(){t.go("linesIndex")})}function r(n){e.authenticate(n).then(function(){t.go("linesIndex")})}var o=this;o.credentials={},o.submit=n,o.authenticate=r}function LinesIndexController(e){var t=this;t.all=[],e.getStatuses().then(function(e){t.all=e})}function LinesFavIndexController(e,t,n){var r=this;r.lineFavs=[],r.user=n.get({id:t.getPayload()._id}),e.getStatuses().then(function(e){r.lineFavs=e})}function LinesShowController(e,t,n){function r(){t({method:"GET",url:"/tweets",params:{q:n.params.tflId}}).then(function(e,t){return t?void console.log("Something went wrong, run away from ",t):(o.tweets=e.data.statuses,void console.log(o.tweets))})}var o=this;o.tweets=[],e.getStatuses().then(function(e){o.line=e.filter(function(e){return e.tflId===n.params.tflId})[0]}),r()}function TFL(e){function t(){return e.get("/status").then(function(e){return e.data})}this.getStatuses=t}function User(e){return new e("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,n){var r=this;r.user=e.get(t.params),r.isLoggedIn=n.isAuthenticated}function UsersEditController(e,t){function n(){r.user.$update(function(){t.go("linesIndex",t.params)})}var r=this;r.user=e.get(t.params),this.update=n}angular.module("twitterForLondon",["ngResource","ui.router","satellizer","ngSanitize"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("twitterForLondon").controller("RegisterController",RegisterController).controller("LoginController",LoginController).controller("ConfirmController",ConfirmationController),RegisterController.$inject=["$auth","$state"],ConfirmationController.$inject=["$http","$state"],LoginController.$inject=["$auth","$state"],angular.module("twitterForLondon").controller("LinesIndexController",LinesIndexController).controller("LinesFavIndexController",LinesFavIndexController).controller("LinesShowController",LinesShowController),LinesIndexController.$inject=["TFL"],LinesFavIndexController.$inject=["TFL","$auth","User"],LinesShowController.$inject=["TFL","$http","$state"],angular.module("twitterForLondon").service("TFL",TFL),TFL.$inject=["$http"],angular.module("twitterForLondon").factory("User",User),User.$inject=["$resource"],angular.module("twitterForLondon").controller("UsersIndexController",UsersIndexController).controller("UsersEditController",UsersIndexController).controller("UsersShowController",UsersShowController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
