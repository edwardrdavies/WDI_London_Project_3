"use strict";function Router(e,t){function n(){return!!localStorage.getItem("token")}e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as user"}).state("linesIndex",{url:"/lines",templateUrl:"/templates/linesIndex.html",controller:"LinesIndexController as linesIndex"}).state("linesFavIndex",{url:"/linesFav",templateUrl:"/templates/linesFavIndex.html",controller:"LinesFavIndexController as linesFavIndex"}).state("linesShow",{url:"/lines/:tflId",templateUrl:"/templates/linesShow.html",controller:"LinesShowController as linesShow"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersEdit",{url:"/user",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as edit"}).state("userLines",{url:"/user/lines",templateUrl:"/templates/userLines.html",controller:"UserLinesController as userLines"}).state("confirm",{url:"/confirm/:confirmationCode",templateUrl:"/templates/confirm.html",controller:"ConfirmController as confirm"}).state("messagesNew",{url:"/messages/:tflId/new",templateUrl:"/templates/messagesNew.html",controller:"MessagesNewController as message"}).state("messagesIndex",{url:"/messages/:tflId",templateUrl:"/templates/messagesIndex.html",controller:"MessagesIndexController as messagesIndex"}),n()?t.otherwise("/lines"):t.otherwise("/login")}function Auth(e){e.loginUrl="/login",e.signupUrl="/register",e.tokenPrefix="",e.facebook({clientId:"360279380977935"}),e.twitter({consumer_key:"rG5fJ6jrp0NECDqpceKMo5UuZ"}),e.github({clientId:"1ce21c481fa0a5dc7af0"})}function RegisterController(e,t){function n(){e.signup(r.user).then(function(){t.go("login")})}var r=this;r.user={},r.submit=n}function ConfirmationController(e,t){e({method:"POST",url:"/confirm/"+t.params.confirmationCode}).then(function(){t.go("login")})}function LoginController(e,t){function n(){e.login(o.credentials).then(function(){t.go("linesIndex")})}function r(n){e.authenticate(n).then(function(){t.go("linesIndex")})}var o=this;o.credentials={},o.submit=n,o.authenticate=r}function LinesIndexController(e){var t=this;t.all=[],e.getStatuses().then(function(e){t.all=e})}function LinesFavIndexController(e,t,n){var r=this;r.lineFavs=[],n.get({id:t.getPayload()._id},function(t){r.user=t,e.getStatuses(t.lineFavs).then(function(e){r.lineFavs=e})})}function LinesShowController(e,t,n){function r(){t({method:"GET",url:"/tweets",params:{q:n.params.tflId}}).then(function(e,t){return t?void console.log("Something went wrong, run away from ",t):(o.tweets=e.data.statuses,void console.log(o.tweets))})}var o=this;o.tweets=[],e.getStatuses([n.params.tflId]).then(function(e){o.line=e[0]}),r()}function MessagesNewController(e,t,n){function r(){o.newMessage.tflId=n.params.tflId,t.save(o.newMessage).then(function(e){o.all.push(e),o.newMessage={},n.go("messagesIndex",{tflId:n.params.tflId})})}var o=this;o.all=[],o.addMessage=r,o.newMessage={},o.tflId=n.params.tflId}function MessagesIndexController(e,t){function n(){e.query(t.params).then(function(e){r.all=e})}var r=this;r.all=[],r.tflId=t.params.tflId,n()}function Message(e){function t(t){return e.post("/messages",t).then(function(e){return e.data}).catch(function(){console.log("Something went wrong with save in MessageService")})}function n(t){return e.get("/messages",{params:t}).then(function(e){return e.data}).catch(function(){console.log("Something went wrong with query in MessageService")})}this.save=t,this.query=n}function TFL(e){function t(t){var n={};return t&&t.length>0&&(n.lines=t.join(",")),e.get("/status",{params:n}).then(function(e){return e.data})}this.getStatuses=t}function User(e){return new e("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,n){var r=this;r.user=e.get(t.params),r.isLoggedIn=n.isAuthenticated}function UsersEditController(e,t,n){function r(){s.user.$update(function(){t.go("linesIndex",t.params)})}function o(){localStorage.removeItem("token"),t.go("login")}var s=this;s.user=e.get({id:n.getPayload()._id}),s.update=r,s.logout=o}function UserLinesController(e,t,n,r,o){function s(e){return a.user.lineFavs.includes(e.tflId)}function l(e){if(s(e)){var t=a.user.lineFavs.findIndex(function(t){t===e.tflId});a.user.lineFavs.splice(t,1)}else a.user.lineFavs.push(e.tflId)}function i(){a.user.$update(function(){t.go("linesIndex",t.params)})}var a=this;a.all=[],a.user=e.get({id:o.getPayload()._id}),a.isFav=s,a.toggle=l,a.update=i,n.getStatuses().then(function(e){a.all=e})}angular.module("twitterForLondon",["ngResource","ui.router","satellizer","ngSanitize"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("twitterForLondon").controller("RegisterController",RegisterController).controller("LoginController",LoginController).controller("ConfirmController",ConfirmationController),RegisterController.$inject=["$auth","$state"],ConfirmationController.$inject=["$http","$state"],LoginController.$inject=["$auth","$state"],angular.module("twitterForLondon").controller("LinesIndexController",LinesIndexController).controller("LinesFavIndexController",LinesFavIndexController).controller("LinesShowController",LinesShowController),LinesIndexController.$inject=["TFL"],LinesFavIndexController.$inject=["TFL","$auth","User"],LinesShowController.$inject=["TFL","$http","$state"],angular.module("twitterForLondon").controller("MessagesNewController",MessagesNewController).controller("MessagesIndexController",MessagesIndexController),MessagesNewController.$inject=["$http","Message","$state"],MessagesIndexController.$inject=["Message","$state"],angular.module("twitterForLondon").service("Message",Message),Message.$inject=["$http"],angular.module("twitterForLondon").service("TFL",TFL),TFL.$inject=["$http"],angular.module("twitterForLondon").factory("User",User),User.$inject=["$resource"],angular.module("twitterForLondon").controller("UsersIndexController",UsersIndexController).controller("UsersEditController",UsersEditController).controller("UsersShowController",UsersShowController).controller("UserLinesController",UserLinesController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state","$auth"],UserLinesController.$inject=["User","$state","TFL","$scope","$auth"];
//# sourceMappingURL=app.js.map
